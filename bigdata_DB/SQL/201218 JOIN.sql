SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
--DEPARTMENT_ID, MANAGER_ID
SELECT * FROM LOCATIONS;
--LOCATION_ID
SELECT * FROM COUNTRIES;
--COUNTRY_NAME 
SELECT * FROM JOB_GRADES;
--------------------------------------------------
--1 모든 부서의 주소
SELECT L.LOCATION_ID
    ,L.STREET_ADDRESS
    ,L.CITY
    ,L.STATE_PROVINCE
    ,C.COUNTRY_NAME
FROM LOCATIONS L JOIN COUNTRIES C
ON L.COUNTRY_ID = C.COUNTRY_ID;

SELECT L.LOCATION_ID
    ,L.STREET_ADDRESS
    ,L.CITY
    ,L.STATE_PROVINCE
    ,C.COUNTRY_NAME
FROM LOCATIONS L, COUNTRIES C
WHERE L.COUNTRY_ID = C.COUNTRY_ID;

--2 해당 부서가 있는 모든 사원의 성, 부서 정보
SELECT E.LAST_NAME
    ,E.DEPARTMENT_ID
    ,D.DEPARTMENT_NAME
FROM DEPARTMENTS D JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
ORDER BY 1;

SELECT E.LAST_NAME
    ,E.DEPARTMENT_ID
    ,D.DEPARTMENT_NAME
FROM DEPARTMENTS D, EMPLOYEES E
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
ORDER BY 1;

--3 Toronto에서 근무하는 사원 정보
SELECT E.LAST_NAME
    ,E.JOB_ID
    ,E.DEPARTMENT_ID
    ,D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID
AND L.CITY = 'Toronto';

SELECT E.LAST_NAME
    ,E.JOB_ID
    ,E.DEPARTMENT_ID
    ,D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND L.CITY = 'Toronto';

--4 사원 및 해당 관리자의 성, 사원번호
SELECT E.LAST_NAME "Employee"
    ,E.EMPLOYEE_ID "EMP#"
    ,M.LAST_NAME "Manager"
    ,M.EMPLOYEE_ID "Mgr#"
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY 3;

SELECT E.LAST_NAME "Employee"
    ,E.EMPLOYEE_ID "EMP#"
    ,M.LAST_NAME "Manager"
    ,M.EMPLOYEE_ID "Mgr#"
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY 3;

--5 해당 관리자가 없는 사원을 포함한 정보
SELECT E.LAST_NAME "Employee"
    ,E.EMPLOYEE_ID "EMP#"
    ,M.LAST_NAME "Manager"
    ,M.EMPLOYEE_ID "Mgr#"
FROM EMPLOYEES E LEFT OUTER JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY 2;

SELECT E.LAST_NAME "Employee"
    ,E.EMPLOYEE_ID "EMP#"
    ,M.LAST_NAME "Manager"
    ,M.EMPLOYEE_ID "Mgr#"
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.MANAGER_ID = M.EMPLOYEE_ID(+)
ORDER BY 2;

--6 지정된 사원과 동일한 부서에서 근무하는 모든 사원
SELECT E.DEPARTMENT_ID "DEPARTMENT"
    ,E.LAST_NAME "EMPLOYEE"
    ,M.LAST_NAME "COLLEAGUE"
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.DEPARTMENT_ID = M.DEPARTMENT_ID 
AND E.LAST_NAME != M.LAST_NAME
ORDER BY 1,2;

SELECT E.DEPARTMENT_ID "DEPARTMENT"
    ,E.LAST_NAME "EMPLOYEE"
    ,M.LAST_NAME "COLLEAGUE"
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.DEPARTMENT_ID = M.DEPARTMENT_ID 
AND E.LAST_NAME != M.LAST_NAME
ORDER BY 1,2;

--7 모든 사원의 이름, 직무, 부서명, 급여 및 등급
SELECT E.LAST_NAME
    ,E.JOB_ID
    ,D.DEPARTMENT_NAME
    ,E.SALARY
    ,J.GRADE_LEVEL
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN JOB_GRADES J
ON E.SALARY BETWEEN J.LOWEST_SAL AND J.HIGHEST_SAL
ORDER BY 4 DESC;

SELECT E.LAST_NAME
    ,E.JOB_ID
    ,D.DEPARTMENT_NAME
    ,E.SALARY
    ,J.GRADE_LEVEL
FROM EMPLOYEES E, DEPARTMENTS D, JOB_GRADES J
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.SALARY BETWEEN J.LOWEST_SAL AND J.HIGHEST_SAL
ORDER BY 4 DESC;

--8 Davies 이후에 채용된 모든 사원의 이름, 채용날짜
SELECT M.LAST_NAME, M.HIRE_DATE
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.LAST_NAME = 'Davies'
AND E.HIRE_DATE < M.HIRE_DATE;

SELECT M.LAST_NAME, M.HIRE_DATE
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.LAST_NAME = 'Davies'
AND E.HIRE_DATE < M.HIRE_DATE;

-- 9 관리자보다 먼저 채용된 모든 사원과 해당 관리자의 이름, 채용날짜
SELECT E.LAST_NAME
    ,E.HIRE_DATE
    ,M.LAST_NAME
    ,M.HIRE_DATE
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID
AND E.HIRE_DATE < M.HIRE_DATE
ORDER BY 3 ASC;

SELECT E.LAST_NAME
    ,E.HIRE_DATE
    ,M.LAST_NAME
    ,M.HIRE_DATE
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.MANAGER_ID = M.EMPLOYEE_ID
AND E.HIRE_DATE < M.HIRE_DATE
ORDER BY 3 ASC;
